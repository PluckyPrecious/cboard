// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CommunicatorDialog tests default renderer 1`] = `
<ForwardRef(WithStyles)
  buttons={
    <CommunicatorDialogButtons
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      onSearch={[Function]}
    />
  }
  disableSubmit={true}
  onClose={[Function]}
  open={false}
  title="cboard.components.CommunicatorDialog.title"
>
  <ForwardRef(WithStyles)>
    <FullScreenDialogContent
      className="CommunicatorDialog__container"
    >
      <ForwardRef(WithStyles)
        className="CommunicatorDialog__tabs"
        fixed="top"
        onChange={[Function]}
        scrollButtons="off"
        value={0}
        variant="scrollable"
      >
        <ForwardRef(WithStyles)
          className="active"
          label="cboard.components.CommunicatorDialog.communicatorBoards"
        />
        <ForwardRef(WithStyles)
          className=""
          label="cboard.components.CommunicatorDialog.allBoards"
        />
        <ForwardRef(WithStyles)
          className=""
          disabled={false}
          label="cboard.components.CommunicatorDialog.myBoards"
        />
      </ForwardRef(WithStyles)>
      <div
        className="CommunicatorDialog__content"
      >
        <React.Fragment>
          <div
            className="CommunicatorDialog__communicatorData"
          >
            <React.Fragment>
              <div
                className="CommunicatorDialog__communicatorData__title"
              >
                Cboard's Communicator
              </div>
              <div
                className="CommunicatorDialog__communicatorData__boardsQty"
              >
                cboard.components.CommunicatorDialog.boardsQty
              </div>
            </React.Fragment>
          </div>
          <div
            className="CommunicatorDialog__boards"
          >
            <div
              className="CommunicatorDialog__boards__emptyMessage"
            >
              <FormattedMessage
                values={Object {}}
              />
            </div>
          </div>
        </React.Fragment>
      </div>
    </FullScreenDialogContent>
  </ForwardRef(WithStyles)>
</ForwardRef(WithStyles)>
`;

exports[`CommunicatorDialog tests loading behavior 1`] = `
<WithStyles(FullScreenDialog)
  buttons={
    <CommunicatorDialogButtons
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      onSearch={[Function]}
    />
  }
  disableSubmit={true}
  onClose={[Function]}
  open={false}
  title="cboard.components.CommunicatorDialog.title"
>
  <WithStyles(ForwardRef(Paper))>
    <FullScreenDialogContent
      className="CommunicatorDialog__container"
    >
      <WithStyles(ForwardRef(Tabs))
        className="CommunicatorDialog__tabs"
        fixed="top"
        onChange={[Function]}
        scrollButtons="off"
        value={0}
        variant="scrollable"
      >
        <WithStyles(ForwardRef(Tab))
          className="active"
          label="cboard.components.CommunicatorDialog.communicatorBoards"
        />
        <WithStyles(ForwardRef(Tab))
          className=""
          label="cboard.components.CommunicatorDialog.allBoards"
        />
        <WithStyles(ForwardRef(Tab))
          className=""
          disabled={false}
          label="cboard.components.CommunicatorDialog.myBoards"
        />
      </WithStyles(ForwardRef(Tabs))>
      <div
        className="CommunicatorDialog__content"
      >
        <div
          className="CommunicatorDialog__communicatorData"
        >
          <div
            className="CommunicatorDialog__communicatorData__title"
          >
            Cboard's Communicator
          </div>
          <div
            className="CommunicatorDialog__communicatorData__boardsQty"
          >
            cboard.components.CommunicatorDialog.boardsQty
          </div>
        </div>
        <div
          className="CommunicatorDialog__boards"
        >
          <div
            className="CommunicatorDialog__boards__emptyMessage"
          >
            <FormattedMessage
              values={Object {}}
            />
          </div>
        </div>
      </div>
    </FullScreenDialogContent>
  </WithStyles(ForwardRef(Paper))>
</WithStyles(FullScreenDialog)>
`;

exports[`CommunicatorDialog tests loading behavior 2`] = `
<WithStyles(FullScreenDialog)
  buttons={
    <CommunicatorDialogButtons
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      onSearch={[Function]}
    />
  }
  disableSubmit={true}
  onClose={[Function]}
  open={false}
  title="cboard.components.CommunicatorDialog.title"
>
  <WithStyles(ForwardRef(Paper))>
    <FullScreenDialogContent
      className="CommunicatorDialog__container"
    >
      <WithStyles(ForwardRef(Tabs))
        className="CommunicatorDialog__tabs"
        fixed="top"
        onChange={[Function]}
        scrollButtons="off"
        value={1}
        variant="scrollable"
      >
        <WithStyles(ForwardRef(Tab))
          className=""
          label="cboard.components.CommunicatorDialog.communicatorBoards"
        />
        <WithStyles(ForwardRef(Tab))
          className="active"
          label="cboard.components.CommunicatorDialog.allBoards"
        />
        <WithStyles(ForwardRef(Tab))
          className=""
          disabled={false}
          label="cboard.components.CommunicatorDialog.myBoards"
        />
      </WithStyles(ForwardRef(Tabs))>
      <div
        className="CommunicatorDialog__content"
      >
        <WithStyles(ForwardRef(CircularProgress))
          className="CommunicatorDialog__spinner"
          size={35}
          thickness={7}
        />
      </div>
    </FullScreenDialogContent>
  </WithStyles(ForwardRef(Paper))>
</WithStyles(FullScreenDialog)>
`;

exports[`CommunicatorDialog tests tabs behavior 1`] = `
<WithStyles(FullScreenDialog)
  buttons={
    <CommunicatorDialogButtons
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      onSearch={[Function]}
    />
  }
  disableSubmit={true}
  onClose={[Function]}
  open={false}
  title="cboard.components.CommunicatorDialog.title"
>
  <WithStyles(ForwardRef(Paper))>
    <FullScreenDialogContent
      className="CommunicatorDialog__container"
    >
      <WithStyles(ForwardRef(Tabs))
        className="CommunicatorDialog__tabs"
        fixed="top"
        onChange={[Function]}
        scrollButtons="off"
        value={0}
        variant="scrollable"
      >
        <WithStyles(ForwardRef(Tab))
          className="active"
          label="cboard.components.CommunicatorDialog.communicatorBoards"
        />
        <WithStyles(ForwardRef(Tab))
          className=""
          label="cboard.components.CommunicatorDialog.allBoards"
        />
        <WithStyles(ForwardRef(Tab))
          className=""
          disabled={false}
          label="cboard.components.CommunicatorDialog.myBoards"
        />
      </WithStyles(ForwardRef(Tabs))>
      <div
        className="CommunicatorDialog__content"
      >
        <div
          className="CommunicatorDialog__communicatorData"
        >
          <div
            className="CommunicatorDialog__communicatorData__title"
          >
            Cboard's Communicator
          </div>
          <div
            className="CommunicatorDialog__communicatorData__boardsQty"
          >
            cboard.components.CommunicatorDialog.boardsQty
          </div>
        </div>
        <div
          className="CommunicatorDialog__boards"
        >
          <div
            className="CommunicatorDialog__boards__emptyMessage"
          >
            <FormattedMessage
              values={Object {}}
            />
          </div>
        </div>
      </div>
    </FullScreenDialogContent>
  </WithStyles(ForwardRef(Paper))>
</WithStyles(FullScreenDialog)>
`;

exports[`CommunicatorDialog tests tabs behavior 2`] = `
<WithStyles(FullScreenDialog)
  buttons={
    <CommunicatorDialogButtons
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      onSearch={[Function]}
    />
  }
  disableSubmit={true}
  onClose={[Function]}
  open={false}
  title="cboard.components.CommunicatorDialog.title"
>
  <WithStyles(ForwardRef(Paper))>
    <FullScreenDialogContent
      className="CommunicatorDialog__container"
    >
      <WithStyles(ForwardRef(Tabs))
        className="CommunicatorDialog__tabs"
        fixed="top"
        onChange={[Function]}
        scrollButtons="off"
        value={1}
        variant="scrollable"
      >
        <WithStyles(ForwardRef(Tab))
          className=""
          label="cboard.components.CommunicatorDialog.communicatorBoards"
        />
        <WithStyles(ForwardRef(Tab))
          className="active"
          label="cboard.components.CommunicatorDialog.allBoards"
        />
        <WithStyles(ForwardRef(Tab))
          className=""
          disabled={false}
          label="cboard.components.CommunicatorDialog.myBoards"
        />
      </WithStyles(ForwardRef(Tabs))>
      <div
        className="CommunicatorDialog__content"
      >
        <div
          className="CommunicatorDialog__boards"
        >
          <div
            className="CommunicatorDialog__boards__emptyMessage"
          >
            <FormattedMessage
              values={Object {}}
            />
          </div>
        </div>
      </div>
    </FullScreenDialogContent>
  </WithStyles(ForwardRef(Paper))>
</WithStyles(FullScreenDialog)>
`;
